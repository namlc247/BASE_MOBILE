import React, { useEffect } from "react";
import { AppNavigator } from "./src/navigation/AppNavigator";
import { useNetwork } from "./src/hooks/useNetwork";
import { Alert } from "react-native";
import { Buffer } from 'buffer';

import { install as installCrypto } from 'react-native-quick-crypto';
installCrypto();
global.Buffer = Buffer;

export default function App() {
  // const { checkAuth } = useAuthStore();
  const { isConnected } = useNetwork();
  // const { setupNotifications, processQueue: processNotificationQueue } = useNotification();
  // const { processQueue: processOfflineQueue } = useQueue();

  useEffect(() => {
    const initApp = async () => {
      try {
        // // Check authentication status
        // await checkAuth();

        // // Setup notifications
        // await setupNotifications();

        // Process any queued notifications and offline actions
        if (isConnected) {
          // await processNotificationQueue();
          // await processOfflineQueue();
        } else {
          Alert.alert('Kết nối không thành công', 'Vui lòng kiểm tra lại đường truyền');
        }
      } catch (error) {
        Alert.alert('Error', 'Failed to initialize app');
      }
    };

    initApp();
  }, []);

  // Monitor network status changes
  // useEffect(() => {
  //   if (isConnected) {
  //     processOfflineQueue();
  //   }
  // }, [isConnected]);

  return <AppNavigator />;
}
