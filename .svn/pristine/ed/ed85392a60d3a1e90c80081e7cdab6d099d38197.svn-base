{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React from \"react\";\nimport Calendar from \"../screens/Calendar\";\nimport { default as Chat } from \"../screens/Chat\";\nimport Meeting from \"../screens/Meeting\";\nimport Notifications from \"../screens/Notifications\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport var AppNavigator = function AppNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Calendar\n      }), _jsx(Stack.Screen, {\n        name: \"Notifications\",\n        component: Notifications\n      }), _jsx(Stack.Screen, {\n        name: \"Chat\",\n        component: Chat\n      }), _jsx(Stack.Screen, {\n        name: \"Meeting\",\n        component: Meeting\n      })]\n    })\n  });\n};","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","React","Calendar","default","Chat","Meeting","Notifications","jsx","_jsx","jsxs","_jsxs","Stack","AppNavigator","children","Navigator","screenOptions","headerShown","Screen","name","component"],"sources":["D:/WORK/SOURCE_MOBILE/react-native-btm-main/src/navigation/AppNavigator.tsx"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React from \"react\";\nimport Calendar from \"../screens/Calendar\";\nimport { default as Chat } from \"../screens/Chat\";\nimport Meeting from \"../screens/Meeting\";\nimport Notifications from \"../screens/Notifications\";\n\nconst Stack = createNativeStackNavigator();\n\nexport const AppNavigator = () => {\n  // const { token, isLoading } = useAuthStore();\n\n  // if (isLoading) {\n  //   return <SplashScreen />;\n  // }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        {/* {token ? (\n          // Protected routes\n          <>\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n          </>\n        ) : (\n          // Public routes\n          <>\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n          </>\n        )} */}\n        {/* <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Login\" component={LoginScreen} /> */}\n\n        <Stack.Screen name=\"Home\" component={Calendar} />\n        <Stack.Screen name=\"Notifications\" component={Notifications} />\n        <Stack.Screen name=\"Chat\" component={Chat} />\n        <Stack.Screen name=\"Meeting\" component={Meeting} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ;AACf,SAASC,OAAO,IAAIC,IAAI;AACxB,OAAOC,OAAO;AACd,OAAOC,aAAa;AAAiC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,KAAK,GAAGX,0BAA0B,CAAC,CAAC;AAE1C,OAAO,IAAMY,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EAOhC,OACEJ,IAAA,CAACT,mBAAmB;IAAAc,QAAA,EAClBH,KAAA,CAACC,KAAK,CAACG,SAAS;MAACC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAH,QAAA,GAerDL,IAAA,CAACG,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEjB;MAAS,CAAE,CAAC,EACjDM,IAAA,CAACG,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,eAAe;QAACC,SAAS,EAAEb;MAAc,CAAE,CAAC,EAC/DE,IAAA,CAACG,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEf;MAAK,CAAE,CAAC,EAC7CI,IAAA,CAACG,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEd;MAAQ,CAAE,CAAC;IAAA,CACpC;EAAC,CACC,CAAC;AAE1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}