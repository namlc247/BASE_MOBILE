import React, { useCallback, useRef, useState } from "react";
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  SafeAreaView,
  StyleSheet,
  Image,
  Alert,
  ImageBackground,
} from "react-native";
import calendarMenu from "../accsets/iconApp/logoApp.png";
import { useAuthStore } from "../stores/authStore";
import backGroundLogin from "../accsets/image/backGroundLogin.png";
import manualIcon from "../accsets/icon/manual.png";
import phoneIcon from "../accsets/icon/phone.png";
import emailquansu from "../accsets/iconApp/emailquansu.jpg";
import quanlyvanban from "../accsets/iconApp/quanlyvanban.jpg";
import tw from "twrnc";
import { useFocusEffect, useNavigation } from '@react-navigation/native';
import instance from "../services/axios";
import * as SecureStore from 'expo-secure-store';
import IconRoundedButton from "../components/button/IconRoundedButton";
import LoadingModal from "../components/LoadingModal";

const Login: React.FC = () => {
  const usernameRef = useRef<any>(null);
  const passwordRef = useRef<any>(null);
  const [username, setUsername] = useState("admin");
  const [password, setPassword] = useState("123456");
  const login = useAuthStore((state) => state.login);
  const isLoading = useAuthStore((state) => state.isLoading);
  const navigation = useNavigation();

  const [ipServer, setIpServer] = useState<string | undefined>("");

  React.useEffect(() => {
    useAuthStore.getState().clearToken();
  }, []);

  useFocusEffect(
    useCallback(() => {
      setIpServer(instance.defaults.baseURL);
    }, [])
  );

  const handleLogin = async () => {
    if (!username || !password) {
      Alert.alert("Lỗi", "Vui lòng nhập đầy đủ tài khoản và mật khẩu");
      return;
    }

    await SecureStore.setItemAsync('ipServer', ipServer ?? "");
    instance.defaults.baseURL = ipServer;

    await login(username, password);
  };

  const handleDownloadFile = () => {
    // Xử lý tải hướng dẫn ở đây

  };

  return (
    <ImageBackground
      source={backGroundLogin}
      style={styles.container}
      imageStyle={styles.backgroundImage}
    >
      <SafeAreaView style={styles.container}>
        <View style={[styles.content]}>
          {/* Header Section - Reordered */}
          <View style={styles.logoContainer}>
            <Image source={calendarMenu} style={styles.logo} />
          </View>

          <View style={tw`pt-5`}>
            <Text style={styles.subTitle}>PHẦN MỀM</Text>
            <Text style={styles.subTitle}>QUẢN LÝ SINH VIÊN</Text>
          </View>

          {/* Main Content Section */}
          <View style={styles.mainContent}>
            {/* Right Section - Login Form */}
            <View style={styles.rightSection}>
              <View style={styles.card}>

                <View style={tw`flex-1 pl-4`}>
                  {/* <Text style={styles.title}>Đăng nhập</Text> */}

                  <View style={styles.inputContainer}>
                    <View>
                      {/* <Text style={styles.label}>Tài khoản</Text> */}
                      <TextInput
                        ref={usernameRef}
                        value={username}
                        onChangeText={setUsername}
                        placeholder="Nhập tài khoản"
                        style={styles.input}
                        autoCapitalize="none"
                        returnKeyType="next"
                        blurOnSubmit={false}
                        onSubmitEditing={() => passwordRef.current?.focus()}
                      />
                    </View>

                    <View>
                      {/* <Text style={styles.label}>Mật khẩu</Text> */}
                      <TextInput
                        ref={passwordRef}
                        value={password}
                        onChangeText={setPassword}
                        placeholder="Nhập mật khẩu"
                        secureTextEntry
                        style={styles.input}
                        autoCapitalize="none"
                        returnKeyType="next"
                        blurOnSubmit={false}
                        onSubmitEditing={handleLogin}
                      />
                    </View>

                    <View>
                      {/* <Text style={styles.label}>Mật khẩu</Text> */}
                      <TextInput
                        placeholder="IP Server"
                        value={ipServer}
                        onChangeText={setIpServer}
                        style={styles.input}
                      />
                    </View>
                  </View>

                  <View style={tw`flex-row justify-between gap-3 mt-4`}>
                    {/* <TouchableOpacity
                      onPress={handleLogin}
                      style={[
                        styles.loginButton,
                        isLoading && styles.disabledButton,
                      ]}
                      disabled={isLoading}
                    >
                      <Text style={styles.buttonText}>
                        {isLoading ? "Đang đăng nhập..." : "Đăng nhập"}
                      </Text>
                    </TouchableOpacity> */}

                    <IconRoundedButton
                      text={isLoading ? "Đang đăng nhập..." : "Đăng nhập"}
                      onPress={() => {
                        handleLogin();
                      }}
                      style="w-full"
                      textStyle="text-base text-[#3f6ad8]"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>


        </View>
      </SafeAreaView>
      <View style={tw`flex-row gap-1 p-1 justify-center items-center bg-[#4c4c4c]`}>
        <Text style={tw`text-white text-[10px] font-medium uppercase`}>
          Phần mềm Quản lý sinh viên - COPYRIGHT © 2025
        </Text>
      </View>

      <LoadingModal visible={isLoading} />
    </ImageBackground>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  backgroundImage: {
    flex: 1,
    width: '100%',
    height: '100%',
    resizeMode: 'cover', // Đảm bảo hình ảnh phủ đầy màn hình
  },
  content: {
    flex: 1,
    padding: 16,
  },
  headerTitle: {
    fontSize: 32,
    fontWeight: "bold",
    color: "#a92722",
    textAlign: "center",
    marginVertical: 16,
  },
  logoContainer: {
    alignItems: "center",
    marginTop: 0,
  },
  logo: {
    width: 160,
    height: 160,
    resizeMode: "contain",
  },
  mainContent: {
    flex: 1,
    flexDirection: "row",
    justifyContent: "center",
    gap: 16,
  },
  leftSection: {
    flex: 1,
    justifyContent: "center",
    gap: 16,
  },
  rightSection: {
    maxWidth: 900,
    flex: 1,
    justifyContent: "center",
  },
  actionButton: {
    backgroundColor: "#3d72b4",
    padding: 16,
    borderRadius: 8,
    alignItems: "center",
  },
  actionButtonText: {
    color: "white",
    fontSize: 16,
    fontWeight: "500",
  },
  card: {
    flexDirection: "row",
    backgroundColor: "white",
    padding: 24,
    borderRadius: 8,
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    elevation: 5,
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    textAlign: "center",
    color: "#83888c",
    marginBottom: 20,
  },
  inputContainer: {
    gap: 20,
  },
  label: {
    fontSize: 14,
    fontWeight: "500",
    color: "#374151",
    marginBottom: 8,
  },
  input: {
    width: "100%",
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderWidth: 1,
    borderColor: "#d1d5db",
    borderRadius: 6,
    color: "#111827",
  },
  loginButton: {
    width: "100%",
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 4,
    borderWidth: 1.5,
    borderColor: "#3f6ad8",
    alignItems: "center",
  },
  guideButton: {
    backgroundColor: "#16a34a",
    paddingVertical: 8,
    borderRadius: 6,
    alignItems: "center",
  },
  buttonText: {
    color: "#3f6ad8",
    fontWeight: "500",
  },
  subTitle: {
    fontSize: 30,
    fontWeight: "bold",
    color: "#d7002e",
    textAlign: "center",
    marginBottom: 0,
    marginTop: 16,
  },
  disabledButton: {
    backgroundColor: "#93c5fd", // lighter blue when disabled
    opacity: 0.7,
  },
  // overlay: {
  //   backgroundColor: 'rgba(255, 255, 255, 0.9)', // Thêm overlay để text dễ đọc hơn
  // },
});

export default Login;
